{"version":3,"sources":["main.ts"],"names":[],"mappings":";AA+EA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA/EA,IAAM,EAAY,SAAS,cAAc,cACnC,EAAU,8DAEV,EAAa,SAAS,cAAc,SACpC,EAAc,SAAS,cAAc,UACrC,EAAa,SAAS,cAAc,SACpC,EAAc,SAAS,cAAc,UACrC,EAAc,SAAS,cAAc,UAErC,EAAA,WAAN,SAAA,IAAA,EAAA,KAAA,GACE,KAAA,IAAc,GAqEhB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aA/DE,MAAA,SAAW,GACJ,KAAA,IAAM,IA8Df,CAAA,IAAA,OA3DE,MAAA,WAAI,IAAA,EAAA,KACF,MAAM,KAAK,KACR,KAAK,SAAC,GAAa,OAAA,EAAS,SAC5B,KAAK,SAAC,GAAa,OAAA,IAAI,OAAO,WAC5B,gBAAgB,EAAS,cAC3B,KAAK,SAAC,GAAc,OAAA,EAAU,MAC9B,KAAK,SAAC,GAAkB,OAAA,OAAO,OAAO,KACtC,KAAK,SAAC,GAAyB,OAAA,EAC7B,OAAO,SAAC,GAA8C,OAAA,EAAQ,WAAW,SAC3E,KAAK,SAAC,GAAgC,OAAA,EACpC,KAAK,SAAC,GAAgB,IAAA,EAAA,EAAC,MAA0C,eAAlB,QAAxB,EAAkB,QAAlB,EAAA,EAAQ,kBAAU,IAAA,OAAA,EAAA,EAAE,YAAI,IAAA,OAAA,EAAA,EAAE,iBACnD,KAAK,SAAC,GAAoB,OAAA,MAAA,OAAe,EAAf,EAAiB,YAC3C,KAAK,SAAC,GACD,IAAC,EACI,OAAA,IAAI,MAAM,aAEnB,EAAU,OACJ,IAAA,EAAa,EAAU,QAAQ,SAC/B,EAAW,EAAU,QAAQ,OAAS,EACrC,OAAA,EAAU,MAAM,EAAY,KAEpC,KAAK,SAAC,GACL,EAAK,aAAe,MAqC5B,CAAA,IAAA,QAjCE,MAAA,WACO,KAAA,MAAQ,SAAS,cAAc,SAC/B,KAAA,MAAM,aAAa,MAAO,KAAK,cAC/B,KAAA,MAAM,UAAU,IAAI,0BACpB,KAAA,MAAM,aAAa,WAAY,QACpC,MAAA,GAAA,EAAW,OAAO,KAAK,SA4B3B,CAAA,IAAA,OAzBE,MAAA,WACO,KAAA,MAAM,SAwBf,CAAA,IAAA,QArBE,MAAA,WACO,KAAA,MAAM,UAoBf,CAAA,IAAA,QAjBE,MAAA,WACO,KAAA,MAAM,aAgBf,EAtEM,GA0DA,EAAS,IAAI,EAEnB,MAAA,GAAA,EAAY,iBAAiB,QAAS,WACpC,EAAO,WAAW,GAClB,EAAO,SAET,MAAA,GAAA,EAAa,iBAAiB,QAAS,WACrC,EAAO,QACP,EAAY,aAAa,WAAY,UAEvC,MAAA,GAAA,EAAY,iBAAiB,QAAS,WAAO,OAAA,EAAO,SACpD,MAAA,GAAA,EAAa,iBAAiB,QAAS,WAAO,OAAA,EAAO,UACrD,MAAA,GAAA,EAAa,iBAAiB,QAAS,WACrC,EAAO,QACP,MAAA,GAAA,EAAa,gBAAgB","file":"main.4c4c55cb.js","sourceRoot":"..\\src","sourcesContent":["const container = document.querySelector('#video-box');\nconst vastUrl = 'https://cdn.admixer.net/public/player%2Fregular-preroll.xml';\n\nconst loadButton = document.querySelector('#load');\nconst startButton = document.querySelector('#start');\nconst playButton = document.querySelector('#play');\nconst pauseButton = document.querySelector('#pause');\nconst closeButton = document.querySelector('#close');\n\nclass Player {\n  url: string = '';\n\n  prepearedUrl: any;\n\n  video: any;\n\n  setVastUrl(url: string) {\n    this.url = url;\n  }\n\n  load() {\n    fetch(this.url)\n      .then((response) => response.text())\n      .then((xmlText) => (new window.DOMParser())\n        .parseFromString(xmlText, 'text/xml'))\n      .then((xmlInJson) => xmlInJson.all)\n      .then((allCollection) => Object.values(allCollection))\n      .then((allCollectionInArray) => allCollectionInArray\n        .filter((element: { attributes: { type: any; }; }) => (element.attributes.type)))\n      .then((filterCollectionByEmptyType) => filterCollectionByEmptyType\n        .find((element: any) => element.attributes?.type?.textContent === 'video/mp4'))\n      .then((requiredElement) => requiredElement?.innerHTML)\n      .then((resultUrl: string | undefined) => {\n        if (!resultUrl) {\n          return new Error('ERROOORRR');\n        }\n        resultUrl.trim();\n        const startOfUrl = resultUrl.indexOf('https');\n        const endOfUrl = resultUrl.indexOf('mp4') + 3;\n        return resultUrl.slice(startOfUrl, endOfUrl);\n      })\n      .then((url) => {\n        this.prepearedUrl = url;\n      });\n  }\n\n  start() {\n    this.video = document.createElement('video');\n    this.video.setAttribute('src', this.prepearedUrl);\n    this.video.classList.add('video-container__video');\n    this.video.setAttribute('disabled', 'true');\n    container?.append(this.video);\n  }\n\n  play() {\n    this.video.play();\n  }\n\n  pause() {\n    this.video.pause();\n  }\n\n  close() {\n    this.video.remove();\n  }\n}\n\nconst player = new Player();\n\nloadButton?.addEventListener('click', () => {\n  player.setVastUrl(vastUrl);\n  player.load();\n});\nstartButton?.addEventListener('click', () => {\n  player.start();\n  startButton.setAttribute('disabled', 'true');\n});\nplayButton?.addEventListener('click', () => (player.play()));\npauseButton?.addEventListener('click', () => (player.pause()));\ncloseButton?.addEventListener('click', () => {\n  player.close();\n  startButton?.removeAttribute('disabled');\n});\n"]}